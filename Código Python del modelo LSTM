import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers import LSTM, Dense
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error

file_path = "D:\\USER\\Downloads\\weekly_scores.xlsx"

try:
    data = pd.read_excel(file_path)
except Exception as e:
    print("Error loading the dataset:", e)
    exit()

print("Shape of data:", data.shape)
print("Columns of data:", data.columns)

num_input_weeks = 5
num_output_weeks = 11

data_train = data.iloc[:58]
data_test = data.iloc[58:]

mse_scores = []
mae_scores = []
r2_scores = []

input_sequences_train = []
output_sequences_train = []

for index, row in data_train.iterrows():
    scores = row.iloc[2:-2].values  # Extract scores from Week 1 to Week 16

    for i in range(len(scores) - num_input_weeks - num_output_weeks + 1):
        input_sequence = scores[i:i+num_input_weeks]
        output_sequence = scores[i+num_input_weeks:i+num_input_weeks+num_output_weeks]
        input_sequences_train.append(input_sequence)
        output_sequences_train.append(output_sequence)

X_train = np.array(input_sequences_train).astype('float32')  # Convert to float32 explicitly
y_train = np.array(output_sequences_train).astype('float32')  # Convert to float32 explicitly

model = Sequential([
    LSTM(50, activation='relu', input_shape=(num_input_weeks, 1)),
    Dense(num_output_weeks)
])
